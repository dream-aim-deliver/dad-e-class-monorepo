'use client';

// Auto-generated by page-scaffold command v2
// Notion: https://www.notion.so/CMS-Manage-Coaching-Page-25d5a7432d01802cabf7fff03e8d1b9e
// Usecases: getCoachingPage, saveCoachingPage, requestFileUpload
// Features: Manage coaching page content with banner (title, description, image, button)
// Upload type: upload_coaching_page_banner_image
// User Types: CMS (admin/superadmin - enforced by middleware)
// Design: Similar to CMS Manage Offers

import { DefaultLoading, DefaultError } from '@maany_shr/e-class-ui-kit';
import { useLocale, useTranslations } from 'next-intl';
import { TLocale } from '@maany_shr/e-class-translations';
import { trpc } from '../trpc/cms-client';
import { useSession } from 'next-auth/react';

interface ManageCoachingPageProps {
  locale: string;
  platformSlug: string;
  platformLocale: string;
}

export default function ManageCoachingPage({
  locale: _locale,
  platformSlug,
  platformLocale,
}: ManageCoachingPageProps) {
  const locale = useLocale() as TLocale;
  const t = useTranslations('pages.manageCoachingPage');

  // Defensive client-side auth check (middleware already enforces admin/superadmin)
  const sessionDTO = useSession();
  const session = sessionDTO.data;
  const isAdmin =
    session?.user?.roles?.includes('admin') ||
    session?.user?.roles?.includes('superadmin');

  // TRPC query for page data - using EXACT usecase name from Notion
  const [coachingPageResponse, { refetch: refetchCoachingPage }] =
    trpc.getCoachingPage.useSuspenseQuery({});


  // Defensive auth check on client side
  if (!session || !isAdmin) {
    return (
      <DefaultError
        locale={locale}
        title={t('error.unauthorized.title')}
        description={t('error.unauthorized.description')}
      />
    );
  }

  // Loading state (defensive check)
  if (!coachingPageResponse) {
    return <DefaultLoading locale={locale} variant="minimal" />;
  }

  return (
    <div className="flex flex-col space-y-5 px-30">
      {/* Page header with translations */}
      <div>
        <h1>{t('title')}</h1>
        <p className="text-text-secondary">{t('description')}</p>
      </div>

      {/* TODO: Implement page content based on Notion features */}
      {/* Usecases to integrate:
          - getCoachingPage: Fetch coaching page content (already called)
          - saveCoachingPage: Save coaching page configuration
          - requestFileUpload: Handle file uploads for coaching page banner (uploadType: "upload_coaching_page_banner_image")
      */}

      {/* TODO: Follow design from CMS Manage Offers page */}

      <div className="text-gray-500">
        <p>Platform: {platformSlug}</p>
        <p>Locale: {platformLocale}</p>
        <p>Implementation in progress...</p>
      </div>
    </div>
  );
}
