'use client';

// Auto-generated by page-scaffold command
// Notion: https://www.notion.so/CMS-Edit-package-Manage-Packages-13a5a7432d0180c09247e0f74f3d2907
// Features: updatePackage, getPackage
// UI Components: Package Edit & Achieve Modal
// User Types: CMS
// Figma: https://www.figma.com/design/8KEwRuOoD5IgxTtFAtLlyS/Just_Do_Ad-1.2?node-id=6441-238157&t=GjW3V89mle6BrGgh-4
// Comments: Can't change the courses of the package, you only change the data around the package or the pricing

import { TLocale } from '@maany_shr/e-class-translations';
import { viewModels } from '@maany_shr/e-class-models';
import { trpc } from '../trpc/cms-client';
import { useGetPackagePresenter } from '../hooks/use-get-package-presenter';
import { useState } from 'react';
import { DefaultLoading, DefaultError, DefaultNotFound, Outline } from '@maany_shr/e-class-ui-kit';
import { useLocale, useTranslations } from 'next-intl';
import { useRouter } from 'next/navigation';
import { useContentLocale } from '../hooks/use-platform-translations';
import { useRequiredPlatformLocale } from '../context/platform-locale-context';

interface EditPackageProps {
    locale: TLocale;
    platformSlug: string;
    platformLocale: string;
    packageId: string;
}

export default function EditPackage({
    locale,
    platformSlug,
    platformLocale,
    packageId,
}: EditPackageProps) {
    const currentLocale = useLocale() as TLocale;
    const router = useRouter();
    const t = useTranslations('pages.editPackage');

    // CMS context hooks
    const requiredPlatformLocale = useRequiredPlatformLocale();
    const contentLocale = useContentLocale();

    let packageIdInt: number;

    try {
        packageIdInt = parseInt(packageId);
    } catch (_) {
        return <DefaultNotFound locale={currentLocale} />;
    }

    // Fetch package data using getPackage feature
    const [getPackageResponse] = trpc.getPackage.useSuspenseQuery({
        packageId: packageIdInt
    });

    const [getPackageViewModel, setGetPackageViewModel] = useState<
        viewModels.TGetPackageViewModel | undefined
    >(undefined);

    const { presenter } = useGetPackagePresenter(setGetPackageViewModel);

    // @ts-ignore
    presenter.present(getPackageResponse, getPackageViewModel);

    // Loading state using discovered patterns
    if (!getPackageViewModel) {
        return <DefaultLoading locale={currentLocale} variant="minimal" />;
    }

    // Error handling using discovered project patterns
    if (getPackageViewModel.mode === 'kaboom') {
        const errorData = getPackageViewModel.data;
        console.error(errorData);

        return <DefaultError locale={currentLocale} />;
    }

    if (getPackageViewModel.mode === 'not-found') {
        const errorData = getPackageViewModel.data;
        console.error(errorData);

        return <DefaultNotFound locale={currentLocale} />;
    }

    // Success state - extract package data
    const packageData = getPackageViewModel.data;

    // TODO: Implement updatePackage mutation
    const updatePackageMutation = trpc.updatePackage.useMutation({
        onSuccess: () => {
            // TODO: Add success handling (toast notification, redirect, etc.)
            router.refresh();
        },
        onError: (error) => {
            // TODO: Add error handling (toast notification, error state, etc.)
            console.error('Failed to update package:', error);
        },
    });

    const handleUpdatePackage = (updatedData: any) => {
        // TODO: Call updatePackage mutation with the form data
        updatePackageMutation.mutate({
            packageId,
            ...updatedData,
        });
    };

    return (
        <div className="flex flex-col space-y-5 px-30">
            <Outline
                title={t('title', { packageName: packageData.package.title || packageId })}
                description={t('description')}
            />

            {/* TODO: Add Package Edit Form */}
            {/*
                Features to implement:
                - Edit package metadata (name, description, etc.)
                - Edit package pricing (Note: Can't change courses in the package)
                - Package Edit & Achieve Modal component

                Important: According to comments, you can only change data around
                the package or the pricing, NOT the courses themselves.
            */}

            <div className="space-y-4">
                {/* TODO: Add form fields for editing package data */}
                {/* Example structure:
                <form onSubmit={(e) => {
                    e.preventDefault();
                    // Extract form data and call handleUpdatePackage
                }}>
                    <div>Package Name: {packageData.name}</div>
                    <div>Package Description: {packageData.description}</div>
                    <div>Package Pricing: {packageData.pricing}</div>

                    <button type="submit" disabled={updatePackageMutation.isPending}>
                        {updatePackageMutation.isPending ? t('saving') : t('save')}
                    </button>
                </form>
                */}

                {/* TODO: Integrate Package Edit & Achieve Modal component */}
                {/* See Figma: https://www.figma.com/design/8KEwRuOoD5IgxTtFAtLlyS/Just_Do_Ad-1.2?node-id=6400-224574 */}
            </div>
        </div>
    );
}
