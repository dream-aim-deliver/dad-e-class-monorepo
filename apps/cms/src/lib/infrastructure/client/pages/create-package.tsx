'use client';

// Auto-generated by page-scaffold command
// Notion: https://www.notion.so/CMS-Create-package-Manage-Packages-f3ea8a52ac704207bdfdec2bacfb37a1
// Title: CMS Create package (Manage Packages)
// Route: /[platform_slug]/packages/create
// User Types: CMS
// Figma: https://www.figma.com/design/8KEwRuOoD5IgxTtFAtLlyS/Just_Do_Ad-1.2?node-id=6385-175063
// Features: 3 features linked (see Notion for details)
// UI Components: 9 components linked (see Notion for details)
// Comments: createPackage creates package in draft state; publishPackage puts it in published state

import { viewModels } from '@maany_shr/e-class-models';
import { trpc } from '../trpc/cms-client';
import { useCreatePackagePresenter } from '../hooks/use-create-package-presenter';
import { useState } from 'react';
import {
    DefaultLoading,
    DefaultError,
    DefaultNotFound,
} from '@maany_shr/e-class-ui-kit';
import { useLocale, useTranslations } from 'next-intl';
import { TLocale } from '@maany_shr/e-class-translations';
import { useRouter } from 'next/navigation';
import { useSession } from 'next-auth/react';
import { useContentLocale } from '../hooks/use-platform-translations';
import { useRequiredPlatformLocale } from '../context/platform-locale-context';

interface CreatePackageProps {
    locale: TLocale;
    platformSlug: string;
    platformLocale: string;
}

export default function CreatePackage({
    locale: routeLocale,
    platformSlug,
    platformLocale,
}: CreatePackageProps) {
    const locale = useLocale() as TLocale;
    const router = useRouter();
    //    const t = useTranslations('pages.create_package');

    // CMS-specific context hooks
    const requiredPlatformLocale = useRequiredPlatformLocale();
    const contentLocale = useContentLocale();

    // Authentication check for CMS users
    const sessionDTO = useSession();
    const session = sessionDTO.data;
    const isLoggedIn = !!session;

    // TODO: Add TRPC query for your page data
    // Example: Fetch package templates, categories, or platform info
    // const [packageTemplatesResponse] = trpc.packages.getPackageTemplates.useSuspenseQuery({});
    // const [platformInfoResponse] = trpc.platforms.getPlatformInfo.useSuspenseQuery({
    //     slug: platformSlug,
    // });

    const [createPackageViewModel, setCreatePackageViewModel] = useState<
        viewModels.TCreatePackageViewModel | undefined
    >(undefined);

    const { presenter } = useCreatePackagePresenter(setCreatePackageViewModel);

    // TODO: Present the data using the presenter
    // @ts-ignore
    // presenter.present(packageTemplatesResponse, createPackageViewModel);

    // Authentication check based on discovered patterns
    if (!isLoggedIn) {
        // TODO: Configure authentication redirect for CMS users
        router.push(`/${locale}/login`);
        return null;
    }

    // Loading state using discovered patterns
    if (!createPackageViewModel) {
        return <DefaultLoading locale={locale} variant="minimal" />;
    }

    // Error handling using discovered project patterns
    if (createPackageViewModel.mode === 'kaboom') {

        return (
            <DefaultError
                locale={locale}
            />
        );
    }

    if (createPackageViewModel.mode === 'not-found') {

        return (
            <DefaultNotFound
                locale={locale}
            />
        );
    }

    // Success state - extract data using discovered pattern
    const createPackageData = createPackageViewModel.data;

    return (
        <div className="flex flex-col space-y-5 px-30">
            {/* TODO: Add your page content */}

            {/* Page Header/Outline */}
            {/* TODO: Add Outline component if needed */}
            {/* <Outline
                title={t('title')}
                description={t('description')}
            /> */}

            {/* Main Content Area */}
            <div className="flex flex-col space-y-4">
                {/* TODO: Implement package creation form */}
                {/* Features to implement (from Notion): */}
                {/* - Package information form fields */}
                {/* - Category selection */}
                {/* - Package template selection */}
                {/* - Draft state creation (createPackage) */}
                {/* - Preview/Review before publish */}
                {/* - Publish action (publishPackage) */}

                {/* UI Components needed (9 components linked in Notion): */}
                {/* TODO: Add the 9 UI components from Notion */}

                {/* Package Creation Form */}
                <div>
                    {/* TODO: Add form fields for package creation */}
                    {/* Package name, description, category, pricing, etc. */}
                </div>

                {/* Draft/Publish Actions */}
                <div className="flex gap-4">
                    {/* TODO: Add draft save button (createPackage) */}
                    {/* TODO: Add publish button (publishPackage) */}
                    {/* TODO: Add cancel/back navigation */}
                </div>
            </div>

            {/* Platform Context */}
            {/* Platform: {platformSlug} */}
            {/* Locale: {platformLocale} */}
            {/* Content Locale: {contentLocale} */}
        </div>
    );
}
