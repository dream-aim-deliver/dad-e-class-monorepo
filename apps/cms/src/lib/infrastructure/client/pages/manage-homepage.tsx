'use client';

// Auto-generated by page-scaffold command
// Notion: https://www.notion.so/CMS-Manage-Homepage-13a5a7432d018034836ff1ff30ebf200
// Features: getHomePage, saveHomePage, requestFileUpload
// User Types: CMS
// Figma: https://www.figma.com/design/8KEwRuOoD5IgxTtFAtLlyS/Just_Do_Ad-1.2?node-id=5664-69581&t=GjW3V89mle6BrGgh-4

import { trpc } from '../trpc/cms-client';
import { useLocale } from 'next-intl';
import {
	DefaultError,
	DefaultLoading,
	DefaultNotFound,
} from '@maany_shr/e-class-ui-kit';
import { TLocale } from '@maany_shr/e-class-translations';
import { viewModels } from '@maany_shr/e-class-models';
import { useState } from 'react';
import { useGetHomePagePresenter } from '../hooks/use-get-home-page-presenter';
import { useContentLocale } from '../hooks/use-platform-translations';
import { useRequiredPlatformLocale } from '../context/platform-locale-context';

/**
 * ManageHomepage component for CMS
 * Allows admins to manage the homepage content including:
 * - Banner with title, description, video, and thumbnail
 * - Carousel items with text, images, buttons, and badges
 * - Coaching On Demand section
 * - Accordion section
 */
export default function ManageHomepage() {
	// App locale - used for UI elements
	const appLocale = useLocale() as TLocale;

	// Platform context
	const platformContext = useRequiredPlatformLocale();
	const contentLocale = useContentLocale();

	// Fetch homepage data
	const [homePageResponse, { refetch: refetchHomePage }] = trpc.getHomePage.useSuspenseQuery({});

	const [homePageViewModel, setHomePageViewModel] = useState<
		viewModels.TGetHomePageViewModel | undefined
	>(undefined);

	const { presenter: homePagePresenter } = useGetHomePagePresenter(setHomePageViewModel);

	// Present the data
	// @ts-ignore
	homePagePresenter.present(homePageResponse, homePageViewModel);

	// Loading state
	if (!homePageViewModel) {
		return <DefaultLoading locale={appLocale} variant="minimal" />;
	}

	// Error handling
	if (homePageViewModel.mode === 'kaboom') {
		return (
			<DefaultError
				locale={appLocale}
				onRetry={() => {
					refetchHomePage();
				}}
			/>
		);
	}

	if (homePageViewModel.mode === 'not-found') {
		return <DefaultNotFound locale={appLocale} />;
	}

	// Success state - extract data
	// const homePageData = homePageViewModel.data;

	// TODO: Implement saveHomePage mutation
	// const saveHomePageMutation = trpc.saveHomePage.useMutation();
	// const handleSaveHomePage = async (data: any) => {
	//   await saveHomePageMutation.mutateAsync(data);
	//   refetchHomePage();
	// };

	// TODO: Implement requestFileUpload mutation
	// const requestFileUploadMutation = trpc.requestFileUpload.useMutation();
	// const handleFileUpload = async (fileData: any) => {
	//   const uploadFormData = await requestFileUploadMutation.mutateAsync(fileData);
	//   // Use uploadFormData to upload file to S3
	// };

	return (
		<div className="flex flex-col space-y-6 p-6">
			{/* Page Header */}
			<div className="bg-gradient-to-r from-primary-500 to-primary-600 text-white p-6 rounded-lg shadow-lg">
				<h1 className="text-3xl font-bold mb-2">Manage Homepage</h1>
				<p className="text-lg opacity-90">
					Platform: {platformContext.platformSlug} | Content Language: {contentLocale.toUpperCase()}
				</p>
			</div>

			{/* TODO: Add Homepage Editor Components */}
			{/* TODO: Implement banner editor */}
			{/* TODO: Implement carousel editor */}
			{/* TODO: Implement coaching on demand section editor */}
			{/* TODO: Implement accordion editor */}

			<div className="bg-white rounded-lg shadow p-6">
				<p className="text-gray-600">
					Homepage management UI will be implemented here.
				</p>
				<p className="text-sm text-gray-500 mt-2">
					Features to implement: getHomePage, saveHomePage, requestFileUpload
				</p>
			</div>
		</div>
	);
}
