'use client';

// Auto-generated by page-scaffold command
// Feature: listStudentInteractions

import { useMemo } from 'react';
import { useLocale, useTranslations } from 'next-intl';
import { TLocale } from '@maany_shr/e-class-translations';
import {
    Breadcrumbs,
    DefaultError,
    Tabs,
    UserAvatar,
} from '@maany_shr/e-class-ui-kit';
import StudentInteractionsTab from './student-interactions-tab';
import { useRouter } from 'next/navigation';

interface SingleStudentProps {
    slug: string;
    initialTab?: string;
    roles: string[];
    studentId: number;
    courseSlug: string;
}

enum StudentTab {
    ASSIGNMENTS = 'assignments',
    INTERACTIONS = 'interactions',
    PRE_COURSE_ASSESSMENT = 'pre-course-assessment',
}

function StudentTabList() {
    const t = useTranslations('pages.student');

    const tabs = [
        {
            value: StudentTab.ASSIGNMENTS,
            label: t('tabs.assignments'),
        },
        {
            value: StudentTab.INTERACTIONS,
            label: t('tabs.interactions'),
        },
        {
            value: StudentTab.PRE_COURSE_ASSESSMENT,
            label: t('tabs.preCourseAssessment'),
        },
    ];

    return (
        <Tabs.List className="flex rounded-medium gap-2">
            {tabs.map((tab, index) => (
                <Tabs.Trigger
                    key={tab.value}
                    value={tab.value}
                    isLast={index === tabs.length - 1}
                >
                    {tab.label}
                </Tabs.Trigger>
            ))}
        </Tabs.List>
    );
}

export default function SingleStudent({
    slug,
    initialTab,
    roles,
    studentId,
    courseSlug,
}: SingleStudentProps) {
    const router = useRouter();
    const locale = useLocale() as TLocale;
    const breadcrumbsTranslations = useTranslations('components.breadcrumbs');

    const defaultTab: string = useMemo(() => {
        if (initialTab) {
            const validTabs: string[] = Object.values(StudentTab);
            if (validTabs.includes(initialTab)) {
                return initialTab;
            }
        }
        return StudentTab.ASSIGNMENTS;
    }, [initialTab]);

    const tabContentClass = 'mt-10';

    return (
        <div className="flex flex-col space-y-4">
            <div className='flex flex-col'>
                <Breadcrumbs
                    items={[
                        {
                            label: breadcrumbsTranslations('home'),
                            onClick: () => router.push('/'),
                        },
                        {
                            label: breadcrumbsTranslations('workspace'),
                            onClick: () => {
                                // TODO: Implement navigation to workspace
                            },
                        },
                        {
                            label: breadcrumbsTranslations('yourStudents'),
                            onClick: () => {
                                // TODO: Implement navigation to your students page
                            },
                        },
                        {
                            label: 'Student Name',
                            onClick: () => {
                                // TODO: Implement navigation to current student page
                            },
                        },
                    ]}
                />
                <div className='flex items-center gap-4'>
                    <UserAvatar
                        fullName="Student Name"
                        size="xLarge"
                    />
                    <h1>Student</h1>
                </div>
            </div>

            <Tabs.Root defaultTab={defaultTab}>
                <StudentTabList />
                <Tabs.Content value={StudentTab.ASSIGNMENTS} className={tabContentClass}>
                    <DefaultError locale={locale} />
                </Tabs.Content>

                <Tabs.Content value={StudentTab.INTERACTIONS} className={tabContentClass}>
                    <StudentInteractionsTab studentId={studentId} courseSlug={courseSlug} />
                </Tabs.Content>

                <Tabs.Content value={StudentTab.PRE_COURSE_ASSESSMENT} className={tabContentClass}>
                    <DefaultError locale={locale} />
                </Tabs.Content>
            </Tabs.Root>
        </div>
    );
}
