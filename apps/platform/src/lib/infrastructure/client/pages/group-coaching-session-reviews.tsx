'use client';

// Auto-generated by page-scaffold command
// Notion: https://www.notion.so/Group-Coaching-Session-Reviews-Tab-2245a7432d0180cf9b1ac4b112ae9d8f
// Feature: listGroupCoachingSessionReviews
// UI Components: CourseReviewFilterModal, GroupCoachingSessionReviews Banner
// User Type: Coach

import { useState, useEffect } from 'react';
import { useLocale, useTranslations } from 'next-intl';
import { useSession } from 'next-auth/react';
import { TLocale } from '@maany_shr/e-class-translations';
import { viewModels } from '@maany_shr/e-class-models';
import { DefaultLoading, DefaultError } from '@maany_shr/e-class-ui-kit';
import { trpc } from '../trpc/cms-client';
import { useListGroupCoachingSessionReviewsPresenter } from '../hooks/use-list-group-coaching-session-reviews-presenter';

interface GroupCoachingSessionReviewsProps {
    locale: TLocale;
    courseSlug: string;
    groupId: number;
    coachingSessionId: number;
}

export default function GroupCoachingSessionReviews({
    locale: localeProp,
    courseSlug,
    groupId,
    coachingSessionId,
}: GroupCoachingSessionReviewsProps) {
    const currentLocale = useLocale() as TLocale;
    const t = useTranslations('pages.groupCoachingSessionReviews');
    const { data: session, status } = useSession();

    // Fetch data using TRPC
    const [reviewsResponse] = trpc.listGroupCoachingSessionReviews.useSuspenseQuery({
        coachingSessionId,
    });

    // View model state
    const [reviewsViewModel, setReviewsViewModel] = useState<
        viewModels.TListGroupCoachingSessionReviewsViewModel | undefined
    >(undefined);

    // Initialize presenter
    const { presenter } = useListGroupCoachingSessionReviewsPresenter(setReviewsViewModel);

    // Present data to view model
    useEffect(() => {
        // @ts-ignore - Presenter type compatibility issue
        presenter.present(reviewsResponse, reviewsViewModel);
    }, [reviewsResponse, presenter, reviewsViewModel]);

    // Loading state
    if (status === 'loading' || !reviewsViewModel) {
        return <DefaultLoading locale={currentLocale} variant="minimal" />;
    }

    // Authentication check
    if (!session) {
        return (
            <DefaultError
                locale={currentLocale}
                title={t('error.title')}
                description={t('error.description')}
            />
        );
    }

    // Error handling
    if (reviewsViewModel.mode === 'kaboom') {
        return (
            <DefaultError
                locale={currentLocale}
                title={t('error.title')}
                description={t('error.description')}
            />
        );
    }

    if (reviewsViewModel.mode === 'not-found') {
        return (
            <DefaultError
                locale={currentLocale}
                title={t('error.title')}
                description={t('error.description')}
            />
        );
    }

    // TODO: Extract data from reviewsViewModel.data
    // TODO: Implement CourseReviewFilterModal
    // TODO: Implement GroupCoachingSessionReviews Banner
    // TODO: Implement reviews list UI

    return (
        <div>
            <h1>{t('title')}</h1>
            <p>{t('description')}</p>
            {/* TODO: Implement page content */}
        </div>
    );
}