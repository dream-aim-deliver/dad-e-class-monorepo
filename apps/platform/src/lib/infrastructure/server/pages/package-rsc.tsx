// Auto-generated by page-scaffold command v2
// Notion: https://www.notion.so/Package-sale-page-Offers-44cd9de337d442cc8acd4fe25fddd386
// Usecases: getPackageWithCourses, listPackageRelatedPackages
// Features: Display package details with courses, Show related packages, Login prompt for unregistered users
// UI Components: Package details view, Course list, Related packages section
// User Types: Visitor
// Figma: https://www.figma.com/design/8KEwRuOoD5IgxTtFAtLlyS/Just_Do_Ad-1.2?node-id=6246-199514

import { HydrateClient, prefetch, trpc } from '../config/trpc/cms-server';
import { Suspense } from 'react';
import DefaultLoadingWrapper from '../../client/wrappers/default-loading';
import Package from '../../client/pages/package';
import { TLocale } from '@maany_shr/e-class-translations';
import { notFound } from 'next/navigation';

interface PackageServerComponentProps {
  locale: TLocale;
  packageId: string;
}

export default async function PackageServerComponent(
  props: PackageServerComponentProps
) {
  // Parse packageId from string to number and validate
  const packageIdNumber = parseInt(props.packageId, 10);
  if (isNaN(packageIdNumber)) {
    notFound();
  }

  // TRPC prefetching for page data using EXACT usecase names from Notion
  await Promise.all([
    prefetch(trpc.getPackageWithCourses.queryOptions({ packageId: packageIdNumber })), // getPackageWithCourses
    prefetch(trpc.listPackageRelatedPackages.queryOptions({ packageId: packageIdNumber })), // listPackageRelatedPackages
  ]);

  return (
    <HydrateClient>
      <Suspense fallback={<DefaultLoadingWrapper />}>
        <Package locale={props.locale} packageId={packageIdNumber} />
      </Suspense>
    </HydrateClient>
  );
}
