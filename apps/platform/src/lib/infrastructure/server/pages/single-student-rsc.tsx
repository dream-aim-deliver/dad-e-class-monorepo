// Auto-generated by page-scaffold command
// Feature: listStudentInteractions

import { Suspense } from 'react';
import DefaultLoadingWrapper from '../../client/wrappers/default-loading';
import { redirect } from 'next/navigation';
import getSession from '../config/auth/get-session';
import SingleStudent from '../../client/pages/student/single-student';
import { HydrateClient } from '../config/trpc/cms-server';
import { TLocale } from '@maany_shr/e-class-translations';

interface SingleStudentServerComponentProps {
    slug: string;
    tab?: string;
    locale: TLocale;
    studentId: number;
    courseSlug: string;
}

export default async function SingleStudentServerComponent({
    slug,
    tab,
    locale,
    studentId,
    courseSlug,
}: SingleStudentServerComponentProps) {
    const session = await getSession();

    if (!session || !session.user) {
        redirect('/auth/login');
    }

    const roles = session.user.roles;
    const isCoachOrAdmin = roles && (roles.includes('coach') || roles.includes('admin'));

    if (!isCoachOrAdmin) {
        // TODO: fill in localized error message
        throw new Error('Access denied. Only coaches and admins can access student details.');
    }

    // TODO: Add TRPC prefetching for student data
    // Based on discovered patterns in this project:
    // await Promise.all([
    //     prefetch(trpc.listStudentInteractions.queryOptions({ studentSlug: slug })),
    // ]);

    return (
        <>
            <HydrateClient>
                <Suspense fallback={<DefaultLoadingWrapper />}>
                    <SingleStudent slug={slug} initialTab={tab} roles={roles} studentId={studentId} courseSlug={courseSlug} />
                </Suspense>
            </HydrateClient>
        </>
    );
}
