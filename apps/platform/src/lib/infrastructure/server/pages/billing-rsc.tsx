// Auto-generated by page-scaffold command v2 - Refactored
// Notion: https://www.notion.so/Order-history-Orders-Payments-Student-workspace-6bb2794c7331418e8fbbf83c40dcb1e5
// Usecases: listUserIncomingTransactions, generateInvoicePdf (Student), listUserOutgoingTransactions (Coach)
// Features: View transaction history, Download/Generate invoices
// UI Components: BaseGrid, Transaction list, Invoice download buttons, Tabs (Coach only)
// User Types: Student, Coach

import { HydrateClient, prefetch, trpc } from '../config/trpc/cms-server';
import { Suspense } from 'react';
import DefaultLoadingWrapper from '../../client/wrappers/default-loading';
import Billing from '../../client/pages/billing';
import { TLocale } from '@maany_shr/e-class-translations';
import getSession from '../config/auth/get-session';

interface BillingServerComponentProps {
  locale: TLocale;
  tab?: string;
}

export default async function BillingServerComponent(
  props: BillingServerComponentProps
) {
  // Check if user is a coach to prefetch additional data
  const session = await getSession();
  const isCoach = session?.user?.roles?.includes('coach');

  // TRPC prefetching for page data using EXACT usecase names from Notion
  const prefetchPromises = [
    prefetch(trpc.listUserIncomingTransactions.queryOptions({})), // Student transactions (orders)
  ];

  // Coaches also need to prefetch outgoing transactions (received payments)
  if (isCoach) {
    prefetchPromises.push(
      prefetch(trpc.listUserOutgoingTransactions.queryOptions({})) // Coach received payments
    );
  }

  await Promise.all(prefetchPromises);

  return (
    <HydrateClient>
      <Suspense fallback={<DefaultLoadingWrapper />}>
        <Billing locale={props.locale} tab={props.tab} />
      </Suspense>
    </HydrateClient>
  );
}
